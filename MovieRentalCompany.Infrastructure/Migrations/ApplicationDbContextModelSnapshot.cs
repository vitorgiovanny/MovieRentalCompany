// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieRentalCompany.Infrastructure.Database.Context;

#nullable disable

namespace MovieRentalCompany.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MovieRentalCompany.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MovieRentalCompany.Domain.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MovieRentalCompany.Domain.Entities.MovieRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Canceled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creater")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Devolution")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Customer")
                        .HasColumnType("int");

                    b.Property<int>("Id_Movie")
                        .HasColumnType("int");

                    b.Property<DateTime>("PrevisionDevolution")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Id_Customer");

                    b.HasIndex("Id_Movie");

                    b.ToTable("MovieRental");
                });

            modelBuilder.Entity("MovieRentalCompany.Domain.Entities.MovieRental", b =>
                {
                    b.HasOne("MovieRentalCompany.Domain.Entities.Customer", "Customers")
                        .WithMany("MovieRentals")
                        .HasForeignKey("Id_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieRentalCompany.Domain.Entities.Movie", "Movies")
                        .WithMany("MovieRentals")
                        .HasForeignKey("Id_Movie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MovieRentalCompany.Domain.Entities.Customer", b =>
                {
                    b.Navigation("MovieRentals");
                });

            modelBuilder.Entity("MovieRentalCompany.Domain.Entities.Movie", b =>
                {
                    b.Navigation("MovieRentals");
                });
#pragma warning restore 612, 618
        }
    }
}
